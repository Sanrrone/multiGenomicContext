par(mar=c(0,3,2,3))
plot(c(0,1000), c(0,1000), type="n", axes=FALSE, xlab="", ylab="")
legend("center", legend = c(as.matrix(uniqnames)),ncol = as.integer(length(uniqnames)/20)+1,xpd = NA,
cex = 0.8, bty="n",fill=c(as.matrix(colors)),border = c("white"),title = "Genes")
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
annotations = annot,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
annot
tail(annot)
lapply(annot,tail)
mauvebb
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
#annotations = annot,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
#read mauve comparison
mauvebb<-read_mauve_backbone("tmpbb.mauve")
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
#annotations = annot,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
plot_gene_map(dna_segs = mauvebb$dna_segs,dna_seg_label_cex = 0.8,
#annotations = annot,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
mauvebb
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
annotations = annot,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
cl <- colors(distinct = TRUE)
temp = list.files(pattern="*.DNASEGcsv")
nfiles<-length(temp)
#parse names
gbknames<- lapply(as.list(temp),function(x){strsplit(x = x,split = "[.]")[[1]][1]})
#read regions of interest
df<-lapply(temp, read.csv, header = F, stringsAsFactors = F)
#read mauve comparison
mauvebb<-read_mauve_backbone("tmpbb.mauve")
df<-lapply(df,function(x){
colnames(x)<-c("name", "start",  "end" ,"strand"  ,"col" ,"lty" ,"lwd" ,"pch" ,"cex", "gene_type","locus_tag")
x$locus_tag<-sapply(x$locus_tag,function(y){strsplit(x = y,split = "_")[[1]][2]})
x
})
annot<-lapply(df,function(x){
annotation(x1=x$start+10,x2=x$end-10,text=x$locus_tag,rot=replicate(nrow(x),30))
})
#set unique colors for genes
uniqnames<-unique(do.call(rbind.data.frame, df)["name"])
uniqnames<-sort(uniqnames[,1])
df2color<-data.frame(row.names = uniqnames,color=sample(cl, length(uniqnames)))
df<-lapply(df,function(x){
x["fill"]<-df2color[x$name,]
x["col"]<-"black"
tmp<-x["name"]
x["name"]<-x["locus_tag"]
x["locus_tag"]<-tmp
x
})
#subset regions of interest in mauve backcbone comparison
if(nfiles>1){
for(i in 1:(nfiles-1)){
tmpcomp<-mauvebb$comparisons[[i]]
tmpcompgbk1<-df[[i]]
tmpcompgbk2<-df[[i+1]]
xmin<-which.min(abs( tmpcomp$start1 - tmpcompgbk1[1,"start"]))
xmax<-which.min(abs( tmpcomp$end2 - tmpcompgbk2[nrow(tmpcompgbk2),"end"])) +1
mauvebb$comparisons[[i]]<-tmpcomp[xmin:xmax,]
}
}
df<-lapply(df,function(x){dna_seg(x)})
names(df)<-gbknames
wformula=as.integer(log(sum(sapply(annot,nrow)))*log(sum(sapply(annot,nrow)))*2)+1
hformula=as.integer(log(nfiles)*nfiles)+1
par(mar=c(0,3,2,3))
plot(c(0,1000), c(0,1000), type="n", axes=FALSE, xlab="", ylab="")
legend("center", legend = c(as.matrix(uniqnames)),ncol = as.integer(length(uniqnames)/20)+1,xpd = NA,
cex = 0.8, bty="n",fill=c(as.matrix(colors)),border = c("white"),title = "Genes")
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
annotations = annot,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.5,
annotations = annot,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
annotations = annot,annotation_cex = 0.5,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
annot<-lapply(df,function(x){
annotation(x1=x$start+10,x2=x$end-10,text=x$locus_tag,rot=replicate(nrow(x),35))
})
#set unique colors for genes
uniqnames<-unique(do.call(rbind.data.frame, df)["name"])
uniqnames<-sort(uniqnames[,1])
df2color<-data.frame(row.names = uniqnames,color=sample(cl, length(uniqnames)))
df<-lapply(df,function(x){
x["fill"]<-df2color[x$name,]
x["col"]<-"black"
tmp<-x["name"]
x["name"]<-x["locus_tag"]
x["locus_tag"]<-tmp
x
})
#subset regions of interest in mauve backcbone comparison
if(nfiles>1){
for(i in 1:(nfiles-1)){
tmpcomp<-mauvebb$comparisons[[i]]
tmpcompgbk1<-df[[i]]
tmpcompgbk2<-df[[i+1]]
xmin<-which.min(abs( tmpcomp$start1 - tmpcompgbk1[1,"start"]))
xmax<-which.min(abs( tmpcomp$end2 - tmpcompgbk2[nrow(tmpcompgbk2),"end"])) +1
mauvebb$comparisons[[i]]<-tmpcomp[xmin:xmax,]
}
}
df<-lapply(df,function(x){dna_seg(x)})
names(df)<-gbknames
wformula=as.integer(log(sum(sapply(annot,nrow)))*log(sum(sapply(annot,nrow)))*2)+1
hformula=as.integer(log(nfiles)*nfiles)+1
par(mar=c(0,3,2,3))
plot(c(0,1000), c(0,1000), type="n", axes=FALSE, xlab="", ylab="")
legend("center", legend = c(as.matrix(uniqnames)),ncol = as.integer(length(uniqnames)/20)+1,xpd = NA,
cex = 0.8, bty="n",fill=c(as.matrix(colors)),border = c("white"),title = "Genes")
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
annot<-lapply(df,function(x){
annotation(x1=x$start+10,x2=x$end-10,text=x$locus_tag,rot=replicate(nrow(x),35))
})
#set unique colors for genes
uniqnames<-unique(do.call(rbind.data.frame, df)["name"])
uniqnames<-sort(uniqnames[,1])
df2color<-data.frame(row.names = uniqnames,color=sample(cl, length(uniqnames)))
df<-lapply(df,function(x){
x["fill"]<-df2color[x$name,]
x["col"]<-"black"
tmp<-x["name"]
x["name"]<-x["locus_tag"]
x["locus_tag"]<-tmp
x
})
#subset regions of interest in mauve backcbone comparison
if(nfiles>1){
for(i in 1:(nfiles-1)){
tmpcomp<-mauvebb$comparisons[[i]]
tmpcompgbk1<-df[[i]]
tmpcompgbk2<-df[[i+1]]
xmin<-which.min(abs( tmpcomp$start1 - tmpcompgbk1[1,"start"]))
xmax<-which.min(abs( tmpcomp$end2 - tmpcompgbk2[nrow(tmpcompgbk2),"end"])) +1
mauvebb$comparisons[[i]]<-tmpcomp[xmin:xmax,]
}
}
df<-lapply(df,function(x){dna_seg(x)})
names(df)<-gbknames
wformula=as.integer(log(sum(sapply(annot,nrow)))*log(sum(sapply(annot,nrow)))*2)+1
hformula=as.integer(log(nfiles)*nfiles)+1
#pdf(file="test.pdf", width = widthformula, height = hformula)
par(mar=c(0,3,2,3))
plot(c(0,1000), c(0,1000), type="n", axes=FALSE, xlab="", ylab="")
legend("center", legend = c(as.matrix(uniqnames)),ncol = as.integer(length(uniqnames)/20)+1,xpd = NA,
cex = 0.8, bty="n",fill=c(as.matrix(colors)),border = c("white"),title = "Genes")
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
library(ggplot2)
library(genoPlotR)
library(RColorBrewer)
cl <- colors(distinct = TRUE)
temp = list.files(pattern="*.DNASEGcsv")
nfiles<-length(temp)
#parse names
gbknames<- lapply(as.list(temp),function(x){strsplit(x = x,split = "[.]")[[1]][1]})
#read regions of interest
df<-lapply(temp, read.csv, header = F, stringsAsFactors = F)
#read mauve comparison
mauvebb<-read_mauve_backbone("tmpbb.mauve")
df<-lapply(df,function(x){
colnames(x)<-c("name", "start",  "end" ,"strand"  ,"col" ,"lty" ,"lwd" ,"pch" ,"cex", "gene_type","locus_tag")
x$locus_tag<-sapply(x$locus_tag,function(y){strsplit(x = y,split = "_")[[1]][2]})
x
})
annot<-lapply(df,function(x){
annotation(x1=x$start+10,x2=x$end-10,text=x$locus_tag,rot=replicate(nrow(x),35))
})
#set unique colors for genes
uniqnames<-unique(do.call(rbind.data.frame, df)["name"])
uniqnames<-sort(uniqnames[,1])
df2color<-data.frame(row.names = uniqnames,color=sample(cl, length(uniqnames)))
df<-lapply(df,function(x){
x["fill"]<-df2color[x$name,]
x["col"]<-"black"
tmp<-x["name"]
x["name"]<-x["locus_tag"]
x["locus_tag"]<-tmp
x
})
#subset regions of interest in mauve backcbone comparison
if(nfiles>1){
for(i in 1:(nfiles-1)){
tmpcomp<-mauvebb$comparisons[[i]]
tmpcompgbk1<-df[[i]]
tmpcompgbk2<-df[[i+1]]
xmin<-which.min(abs( tmpcomp$start1 - tmpcompgbk1[1,"start"]))
xmax<-which.min(abs( tmpcomp$end2 - tmpcompgbk2[nrow(tmpcompgbk2),"end"])) +1
mauvebb$comparisons[[i]]<-tmpcomp[xmin:xmax,]
}
}
df<-lapply(df,function(x){dna_seg(x)})
names(df)<-gbknames
wformula=as.integer(log(sum(sapply(annot,nrow)))*log(sum(sapply(annot,nrow)))*2)+1
hformula=as.integer(log(nfiles)*nfiles)+1
#pdf(file="test.pdf", width = widthformula, height = hformula)
par(mar=c(0,3,2,3))
plot(c(0,1000), c(0,1000), type="n", axes=FALSE, xlab="", ylab="")
legend("center", legend = c(as.matrix(uniqnames)),ncol = as.integer(length(uniqnames)/20)+1,xpd = NA,
cex = 0.8, bty="n",fill=c(as.matrix(colors)),border = c("white"),title = "Genes")
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
#dev.off()
wformula=as.integer(log(sum(sapply(annot,nrow)))*log(sum(sapply(annot,nrow)))*2)+1
hformula=as.integer(log(nfiles)*nfiles)+1
pdf(file="test.pdf", width = widthformula, height = hformula)
par(mar=c(0,3,2,3))
plot(c(0,1000), c(0,1000), type="n", axes=FALSE, xlab="", ylab="")
legend("center", legend = c(as.matrix(uniqnames)),ncol = as.integer(length(uniqnames)/20)+1,xpd = NA,
cex = 0.8, bty="n",fill=c(as.matrix(colors)),border = c("white"),title = "Genes")
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
dev.off()
library(ggplot2)
library(genoPlotR)
library(RColorBrewer)
cl <- colors(distinct = TRUE)
temp = list.files(pattern="*.DNASEGcsv")
nfiles<-length(temp)
#parse names
gbknames<- lapply(as.list(temp),function(x){strsplit(x = x,split = "[.]")[[1]][1]})
#read regions of interest
df<-lapply(temp, read.csv, header = F, stringsAsFactors = F)
#read mauve comparison
mauvebb<-read_mauve_backbone("tmpbb.mauve")
df<-lapply(df,function(x){
colnames(x)<-c("name", "start",  "end" ,"strand"  ,"col" ,"lty" ,"lwd" ,"pch" ,"cex", "gene_type","locus_tag")
x$locus_tag<-sapply(x$locus_tag,function(y){strsplit(x = y,split = "_")[[1]][2]})
x
})
annot<-lapply(df,function(x){
annotation(x1=x$start+10,x2=x$end-10,text=x$locus_tag,rot=replicate(nrow(x),35))
})
#set unique colors for genes
uniqnames<-unique(do.call(rbind.data.frame, df)["name"])
uniqnames<-sort(uniqnames[,1])
df2color<-data.frame(row.names = uniqnames,color=sample(cl, length(uniqnames)))
df<-lapply(df,function(x){
x["fill"]<-df2color[x$name,]
x["col"]<-"black"
tmp<-x["name"]
x["name"]<-x["locus_tag"]
x["locus_tag"]<-tmp
x
})
#subset regions of interest in mauve backcbone comparison
if(nfiles>1){
for(i in 1:(nfiles-1)){
tmpcomp<-mauvebb$comparisons[[i]]
tmpcompgbk1<-df[[i]]
tmpcompgbk2<-df[[i+1]]
xmin<-which.min(abs( tmpcomp$start1 - tmpcompgbk1[1,"start"]))
xmax<-which.min(abs( tmpcomp$end2 - tmpcompgbk2[nrow(tmpcompgbk2),"end"])) +1
mauvebb$comparisons[[i]]<-tmpcomp[xmin:xmax,]
}
}
df<-lapply(df,function(x){dna_seg(x)})
names(df)<-gbknames
wformula=as.integer(log(sum(sapply(annot,nrow)))*log(sum(sapply(annot,nrow)))*2)+1
hformula=as.integer(log(nfiles)*nfiles)+1
pdf(file="test.pdf", width = widthformula, height = hformula)
par(mar=c(0,3,2,3))
plot(c(0,1000), c(0,1000), type="n", axes=FALSE, xlab="", ylab="")
legend("center", legend = c(as.matrix(uniqnames)),ncol = as.integer(length(uniqnames)/20)+1,xpd = NA,
cex = 0.8, bty="n",fill=c(as.matrix(colors)),border = c("white"),title = "Genes")
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
dev.off()
#read mauve comparison
mauvebb<-read_mauve_backbone("tmpbb.mauve")
plot_gene_map(dna_segs = mauvebb$dna_segs,dna_seg_label_cex = 0.8,
annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
df
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
library(ggplot2)
library(genoPlotR)
library(RColorBrewer)
cl <- colors(distinct = TRUE)
temp = list.files(pattern="*.DNASEGcsv")
nfiles<-length(temp)
#parse names
gbknames<- lapply(as.list(temp),function(x){strsplit(x = x,split = "[.]")[[1]][1]})
#read regions of interest
df<-lapply(temp, read.csv, header = F, stringsAsFactors = F)
#read mauve comparison
mauvebb<-read_mauve_backbone("tmpbb.mauve")
df<-lapply(df,function(x){
colnames(x)<-c("name", "start",  "end" ,"strand"  ,"col" ,"lty" ,"lwd" ,"pch" ,"cex", "gene_type","locus_tag")
x$locus_tag<-sapply(x$locus_tag,function(y){strsplit(x = y,split = "_")[[1]][2]})
x
})
annot<-lapply(df,function(x){
annotation(x1=x$start+10,x2=x$end-10,text=x$locus_tag,rot=replicate(nrow(x),35))
})
#set unique colors for genes
uniqnames<-unique(do.call(rbind.data.frame, df)["name"])
uniqnames<-sort(uniqnames[,1])
df2color<-data.frame(row.names = uniqnames,color=sample(cl, length(uniqnames)))
df<-lapply(df,function(x){
x["fill"]<-df2color[x$name,]
x["col"]<-"black"
tmp<-x["name"]
x["name"]<-x["locus_tag"]
x["locus_tag"]<-tmp
x
})
df<-lapply(df,function(x){dna_seg(x)})
names(df)<-gbknames
wformula=as.integer(log(sum(sapply(annot,nrow)))*log(sum(sapply(annot,nrow)))*2)+1
hformula=as.integer(log(nfiles)*nfiles)+1
pdf(file="test.pdf", width = widthformula, height = hformula)
par(mar=c(0,3,2,3))
plot(c(0,1000), c(0,1000), type="n", axes=FALSE, xlab="", ylab="")
legend("center", legend = c(as.matrix(uniqnames)),ncol = as.integer(length(uniqnames)/20)+1,xpd = NA,
cex = 0.8, bty="n",fill=c(as.matrix(colors)),border = c("white"),title = "Genes")
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
dev.off()
plot_gene_map(dna_segs = mauvebb$dna_segs,dna_seg_label_cex = 0.8,
annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
plot_gene_map(dna_segs = df,dna_seg_label_cex = 0.8,
annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
#read mauve comparison
mauvebb<-read_mauve_backbone("../../Escritorio/acidithiobacillus/tmpbb.mauve")
plot_gene_map(dna_segs = mauvebb$dna_segs,dna_seg_label_cex = 0.8,
#annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T)
annot
mauvebb$dna_segs
names(mauvebb$dna_segs)
names(mauvebb$dna_segs)<-c("SS3","YL15","21-59-9","PQ33","PRJEB5721")
plot_gene_map(dna_segs = mauvebb$dna_segs, dna_seg_label_cex = 0.8,
#annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T, main = "A. ferrivorans comparison")
mauvebb
temp
comparisons
#read mauve comparison
mauvebb<-read_mauve_backbone("../../Escritorio/acidithiobacillus/tmpbb.mauve")
df<-lapply(df,function(x){
colnames(x)<-c("name", "start",  "end" ,"strand"  ,"col" ,"lty" ,"lwd" ,"pch" ,"cex", "gene_type","locus_tag")
x$locus_tag<-sapply(x$locus_tag,function(y){strsplit(x = y,split = "_")[[1]][2]})
x
})
annot<-lapply(df,function(x){
annotation(x1=x$start+10,x2=x$end-10,text=x$locus_tag,rot=replicate(nrow(x),35))
})
#set unique colors for genes
uniqnames<-unique(do.call(rbind.data.frame, df)["name"])
uniqnames<-sort(uniqnames[,1])
df2color<-data.frame(row.names = uniqnames,color=sample(cl, length(uniqnames)))
df<-lapply(df,function(x){
x["fill"]<-df2color[x$name,]
x["col"]<-"black"
tmp<-x["name"]
x["name"]<-x["locus_tag"]
x["locus_tag"]<-tmp
x
})
df<-lapply(df,function(x){dna_seg(x)})
names(df)<-gbknames
wformula=as.integer(log(sum(sapply(annot,nrow)))*log(sum(sapply(annot,nrow)))*2)+1
hformula=as.integer(log(nfiles)*nfiles)+1
pdf(file="test.pdf", width = widthformula, height = hformula)
par(mar=c(0,3,2,3))
plot(c(0,1000), c(0,1000), type="n", axes=FALSE, xlab="", ylab="")
legend("center", legend = c(as.matrix(uniqnames)),ncol = as.integer(length(uniqnames)/20)+1,xpd = NA,
cex = 0.8, bty="n",fill=c(as.matrix(colors)),border = c("white"),title = "Genes")
#same order as mauve input
names(mauvebb$dna_segs)<-c("SS3","PRJEB5721","YL15","21-59-9","PQ33")
plot_gene_map(dna_segs = mauvebb$dna_segs, dna_seg_label_cex = 0.8,
#annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T, main = "A. ferrivorans comparison")
dev.off()
plot(c(0,1000), c(0,1000), type="n", axes=FALSE, xlab="", ylab="")
legend("center", legend = c(as.matrix(uniqnames)),ncol = as.integer(length(uniqnames)/20)+1,xpd = NA,
cex = 0.8, bty="n",fill=c(as.matrix(colors)),border = c("white"),title = "Genes")
#same order as mauve input
names(mauvebb$dna_segs)<-c("SS3","PRJEB5721","YL15","21-59-9","PQ33")
plot_gene_map(dna_segs = mauvebb$dna_segs, dna_seg_label_cex = 0.8,
#annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T, main = "A. ferrivorans comparison")
#read mauve comparison
mauvebb<-read_mauve_backbone("../../Escritorio/acidithiobacillus/tmpbb.mauve")
df<-lapply(df,function(x){
colnames(x)<-c("name", "start",  "end" ,"strand"  ,"col" ,"lty" ,"lwd" ,"pch" ,"cex", "gene_type","locus_tag")
x$locus_tag<-sapply(x$locus_tag,function(y){strsplit(x = y,split = "_")[[1]][2]})
x
})
annot<-lapply(df,function(x){
annotation(x1=x$start+10,x2=x$end-10,text=x$locus_tag,rot=replicate(nrow(x),35))
})
#set unique colors for genes
uniqnames<-unique(do.call(rbind.data.frame, df)["name"])
uniqnames<-sort(uniqnames[,1])
df2color<-data.frame(row.names = uniqnames,color=sample(cl, length(uniqnames)))
df<-lapply(df,function(x){
x["fill"]<-df2color[x$name,]
x["col"]<-"black"
tmp<-x["name"]
x["name"]<-x["locus_tag"]
x["locus_tag"]<-tmp
x
})
df<-lapply(df,function(x){dna_seg(x)})
names(df)<-gbknames
wformula=as.integer(log(sum(sapply(annot,nrow)))*log(sum(sapply(annot,nrow)))*2)+1
hformula=as.integer(log(nfiles)*nfiles)+1
pdf(file="test.pdf", width = widthformula, height = hformula)
plot(c(0,1000), c(0,1000), type="n", axes=FALSE, xlab="", ylab="")
legend("center", legend = c(as.matrix(uniqnames)),ncol = as.integer(length(uniqnames)/20)+1,xpd = NA,
cex = 0.8, bty="n",fill=c(as.matrix(colors)),border = c("white"),title = "Genes")
#same order as mauve input
names(mauvebb$dna_segs)<-c("SS3","PRJEB5721","YL15","21-59-9","PQ33")
plot_gene_map(dna_segs = mauvebb$dna_segs, dna_seg_label_cex = 0.8,
#annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T, main = "A. ferrivorans comparison")
dev.off()
wformula=as.integer(log(sum(sapply(annot,nrow)))*log(sum(sapply(annot,nrow)))*2)+1
hformula=as.integer(log(nfiles)*nfiles)+1
par(mar=c(0,3,2,3))
plot(c(0,1000), c(0,1000), type="n", axes=FALSE, xlab="", ylab="")
legend("center", legend = c(as.matrix(uniqnames)),ncol = as.integer(length(uniqnames)/20)+1,xpd = NA,
cex = 0.8, bty="n",fill=c(as.matrix(colors)),border = c("white"),title = "Genes")
#same order as mauve input
names(mauvebb$dna_segs)<-c("SS3","PRJEB5721","YL15","21-59-9","PQ33")
plot_gene_map(dna_segs = mauvebb$dna_segs, dna_seg_label_cex = 0.8,
#annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T, main = "A. ferrivorans comparison")
mauvebb<-read_mauve_backbone("../../Escritorio/acidithiobacillus/tmpbb.mauve")
names(mauvebb$dna_segs)<-c("SS3","PQ33")
plot_gene_map(dna_segs = mauvebb$dna_segs, dna_seg_label_cex = 0.8,
#annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T, main = "A. ferrivorans comparison")
plot_gene_map(dna_segs = mauvebb$dna_segs, dna_seg_label_cex = 0.8,
#annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T, main = "A. ferrivorans comparison",
gene_type = "side_blocks")
mauvebb<-read_mauve_backbone("../../Escritorio/acidithiobacillus/tmpbb.mauve")
names(mauvebb$dna_segs)<-c("CF27","YL15")
plot_gene_map(dna_segs = mauvebb$dna_segs, dna_seg_label_cex = 0.8,
#annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T, main = "A. ferrivorans comparison",
gene_type = "side_blocks")
mauvebb<-read_mauve_backbone("../../Escritorio/acidithiobacillus/tmpbb.mauve")
names(mauvebb$dna_segs)<-c("SS3","CF27")
plot_gene_map(dna_segs = mauvebb$dna_segs, dna_seg_label_cex = 0.8,
#annotations = annot,annotation_cex = 0.6,
comparisons = mauvebb$comparisons,
dna_seg_scale = T, main = "A. ferrivorans comparison",
gene_type = "side_blocks")
BiocManager::install("OmicCircos", version = "3.8")
BiocManager::install("OmicCircos", version = "3.8")
BiocManager::install("OmicCircos", version = "3.8")
install.packages("foreign")
install.packages("Matrix")
install.packages("mgcm")
BiocManager::install("OmicCircos")
install.packages("mgcv")
BiocManager::install("OmicCircos")
library(foreign)
library(Matrix)
library(mgcv)
BiocManager::install("OmicCircos", version = "3.8")
BiocManager::install("OmicCircos", version = "3.8")
BiocManager::install("OmicCircos", version = "3.8")
